[{
  "given":
  {
    "foo": -1,
    "zero": 0,
    "numbers": [-1, 3, 4, 5],
    "array": [-1, 3, 4, 5, "a", "100"],
    "strings": ["a", "b", "c"],
    "decimals": [1.01, 1.9, -1.5],
    "str": "Str",
    "false": false,
    "empty_list": [],
    "empty_hash": {},
    "objects": {"foo": "bar", "bar": "baz"}
  },
  "cases": [
    {
      "expression": "abs(foo)",
      "result": 1
    },
    {
      "expression": "abs(foo)",
      "result": 1
    },
    {
      "expression": "abs(str)",
      "result": null
    },
    {
      "expression": "abs(str)",
      "result": null
    },
    {
      "expression": "abs(array[1])",
      "result": 3
    },
    {
      "expression": "abs(array[1])",
      "result": 3
    },
    {
      "expression": "abs(`false`)",
      "result": null
    },
    {
      "expression": "abs(`-24`)",
      "result": 24
    },
    {
      "expression": "abs(`-24`)",
      "result": 24
    },
    {
      "expression": "abs(`1`, `2`)",
      "error": "syntax"
    },
    {
      "expression": "unknown_function(`1`, `2`)",
      "error": "syntax"
    },
    {
      "expression": "avg(numbers)",
      "result": 2.75
    },
    {
      "expression": "avg(array)",
      "result": null
    },
    {
      "expression": "avg(`abc`)",
      "result": null
    },
    {
      "expression": "avg(foo)",
      "result": null
    },
    {
      "expression": "length(`abc`)",
      "result": 3
    },
    {
      "expression": "length(`\"\"`)",
      "result": 0
    },
    {
      "expression": "length(@)",
      "result": 11
    },
    {
      "expression": "length(strings[0])",
      "result": 1
    },
    {
      "expression": "length(array)",
      "result": 6
    },
    {
      "expression": "length(objects)",
      "result": 2
    },
    {
      "expression": "length(`false`)",
      "result": null
    },
    {
      "expression": "contains(`abc`, `d`)",
      "result": false
    },
    {
      "expression": "contains(`false`, `d`)",
      "result": null
    },
    {
      "expression": "contains(strings, `a`)",
      "result": true
    },
    {
      "expression": "contains(decimals, `1.9`)",
      "result": true
    },
    {
      "expression": "contains(decimals, `false`)",
      "result": false
    },
    {
      "expression": "max(numbers)",
      "result": 5
    },
    {
      "expression": "max(decimals)",
      "result": 1.9
    },
    {
      "expression": "max(abc)",
      "result": null
    },
    {
      "expression": "max(empty_list)",
      "result": null
    },
    {
      "expression": "min(numbers)",
      "result": -1
    },
    {
      "expression": "min(decimals)",
      "result": -1.5
    },
    {
      "expression": "min(abc)",
      "result": null
    },
    {
      "expression": "min(empty_list)",
      "result": null
    },
    {
      "expression": "type(`abc`)",
      "result": "string"
    },
    {
      "expression": "type(`1.0`)",
      "result": "number"
    },
    {
      "expression": "type(`2`)",
      "result": "number"
    },
    {
      "expression": "type(`true`)",
      "result": "boolean"
    },
    {
      "expression": "type(`false`)",
      "result": "boolean"
    },
    {
      "expression": "type(`null`)",
      "result": "null"
    },
    {
      "expression": "type(`[0]`)",
      "result": "array"
    },
    {
      "expression": "type(`{\"a\": \"b\"}`)",
      "result": "object"
    },
    {
      "expression": "keys(objects)",
      "result": ["foo", "bar"]
    },
    {
      "expression": "keys(foo)",
      "result": null
    },
    {
      "expression": "values(objects)",
      "result": ["bar", "baz"]
    },
    {
      "expression": "values(foo)",
      "result": null
    },
    {
      "expression": "ceil(`1.2`)",
      "result": 2
    },
    {
      "expression": "ceil(`string`)",
      "result": null
    },
    {
      "expression": "floor(`1.2`)",
      "result": 1
    },
    {
      "expression": "floor(`string`)",
      "result": null
    },
    {
      "expression": "join(`, `, `[\"a\", \"b\"]`)",
      "result": "a,b"
    },
    {
      "expression": "join(`,`, `[\"a\", 0]`)",
      "result": null
    },
    {
      "expression": "to_string(`foo`)",
      "result": "foo"
    },
    {
      "expression": "to_string(`1.0`)",
      "result": "1.0"
    },
    {
      "expression": "to_string(`[0, 1]`)",
      "result": "[0, 1]"
    },
    {
      "expression": "to_number(`\"1.0\"`)",
      "result": 1.0
    },
    {
      "expression": "to_number(`\"1.1\"`)",
      "result": 1.1
    },
    {
      "expression": "to_number(`\"4\"`)",
      "result": 4
    },
    {
      "expression": "to_number(`\"notanumber\"`)",
      "result": null
    },
    {
      "expression": "\"to_string\"(`1.0`)",
      "error": "syntax"
    },
    {
      "expression": "sort(numbers)",
      "result": [-1, 3, 4, 5]
    },
    {
      "expression": "sort(strings)",
      "result": ["a", "b", "c"]
    },
    {
      "expression": "sort(decimals)",
      "result": [-1.5, 1.01, 1.9]
    }
  ]
}]
